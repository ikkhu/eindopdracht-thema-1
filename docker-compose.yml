services:
  # PostgreSQL Database Container
  db:
    image: postgres:15-alpine
    container_name: taskmanager-db
    environment:
      POSTGRES_DB: taskdb
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: taskpass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - taskmanager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskuser -d taskdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Web Applicatie Container
  web:
    build: .
    container_name: taskmanager-web
    environment:
      DATABASE_URL: postgresql://taskuser:taskpass@db:5432/taskdb
      FLASK_ENV: production
    ports:
      - "8080:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - taskmanager-network
    restart: unless-stopped
    volumes:
      - ./app.py:/app/app.py
      - ./index.html:/app/index.html
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

# Netwerken
networks:
  taskmanager-network:
    driver: bridge
    name: taskmanager-network

# Volumes voor data persistentie
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local